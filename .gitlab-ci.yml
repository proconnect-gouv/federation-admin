global-install:
  image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
  stage: install
  tags:
    - node
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "fca-staging"'
      changes:
        - yarn.lock
        - .gitlab-ci.yml
  cache:
    key:
      files:
        - yarn.lock
      prefix: fca_node_modules
    #
    paths:
      - node_modules
      - fc-exploitation/node_modules
      - shared/node_modules
    fallback_keys:
      - fca_back_node_modules_${CI_DEFAULT_BRANCH}
      - fca_back_node_modules_default
    policy: pull-push
  script:
    - yarn install
    - yarn lint
    - yarn test --coverage
    - ./node-scripts/coverage.sh
  coverage: '/Global coverage is: \[([\d\.]+)%\]/'
  interruptible: true

include:
  - '.gitlab-ci-security-scanning.yml'

stages:
  - install
  - Code quality
  - e2e
  - test
  - Checkmarx
  - Cache
  - Build
  - Tag

variables:
  FC_ROOT: '$CI_BUILDS_DIR/france-connect'
  PROXY_EXPLOITATION: 'http://$EXPLOITATION_PROXY_HOST:$EXPLOITATION_PROXY_PORT'
  CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/cache/Cypress'

test/shared:
  stage: Code quality
  image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
  tags:
    - node
  needs:
    - job: global-install
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "fca-staging"'
  cache:
    key:
      files:
        - yarn.lock
      prefix: fca_node_modules
    #
    policy: pull
    paths:
      - node_modules
      - fc-exploitation/node_modules
      - shared/node_modules
  script:
    - cd shared
    - yarn install
    - yarn test
  interruptible: true

test/exploitation:
  stage: Code quality
  image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
  tags:
    - node
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "fca-staging"'
  cache:
    key:
      files:
        - yarn.lock
      prefix: fca_node_modules
    #
    policy: pull
    paths:
      - node_modules
      - fc-exploitation/node_modules
      - shared/node_modules
  needs:
    - job: global-install
  script:
    - cd fc-exploitation
    - yarn install
    - yarn test

cypress/exploitation:
  timeout: 60 mins
  stage: e2e
  image: ${E2E_DOCKER_IMAGE}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "fca-staging"'
  tags:
    - cypress
  variables:
    TZ: 'Europe/Paris'
  cache:
    key:
      files:
        - yarn.lock
      prefix: fca_node_modules
    #
    policy: pull
    paths:
      - node_modules
      - fc-exploitation/node_modules
      - shared/node_modules
  before_script:
    - yarn config set proxy $PROXY_EXPLOITATION && yarn config set https-proxy $PROXY_EXPLOITATION
    - echo "PROXY_EXPLOITATION=$PROXY_EXPLOITATION"
    - if [ "$(docker ps -aq --filter name=^fc |wc -l) -ge 1" ]; then docker container rm -f $(docker ps -aq --filter name=^fc) || true; docker volume prune -f; fi
    - rm -rf $FC_ROOT/fc
    - git clone --single-branch -b "fca-staging" https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.dev-franceconnect.fr/france-connect/fc.git $FC_ROOT/fc
    - cd $FC_ROOT/fc/docker/volumes/src && ln -s $FC_ROOT/fc fc
    - shopt -s expand_aliases
    - alias docker-stack=$FC_ROOT/fc/docker/docker-stack
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - ln -s $CI_PROJECT_DIR $FC_ROOT/fc/docker/volumes/src/fc-apps
    - cd $CI_PROJECT_DIR
    - yarn install
  script:
    - VERBOSE=1 docker-stack up exploitation-fca-low
    - docker-stack start-all
    - docker-stack wait "exploitation-fca-low" "https://exploitation-fca-low.docker.dev-franceconnect.fr/login" "240"
    - yarn test:e2e:exploitation -c video=${CYPRESS_VIDEO} || (
      mkdir -p fc-exploitation/cypress/logs &&
      (docker cp fc_fc-exploitation_1:/tmp/.pm2/logs fc-exploitation/cypress/logs/fc-exploitation || true) &&
      (docker cp fc-rp-all:/var/log/nginx fc-exploitation/cypress/logs || true) &&
      exit 1)
  interruptible: true
  needs:
    - job: global-install
  artifacts:
    expire_in: 1 hrs
    when: on_failure
    paths:
      - fc-exploitation/cypress/screenshots
      - fc-exploitation/cypress/videos
      - fc-exploitation/cypress/logs
  after_script:
    - $FC_ROOT/fc/docker/docker-stack halt

.base-build:
  stage: 'Build'
  image: ${BUILD_IMAGE}
  tags:
    - build
  only:
    - tags
  environment:
    name: build-fca
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ''
    RELEASE_VERSION: ${CI_COMMIT_REF_NAME}
  services:
    - name: docker:19.03.12-dind
      command: ['--experimental']
  before_script:
    - echo "$INFRA_REGISTRY_PASS" | docker login $INFRA_REGISTRY --username $INFRA_REGISTRY_USER --password-stdin
    - rm -rf $FC_ROOT/fc-docker
    - git clone -b $FC_DOCKER_VERSION --single-branch https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.dev-franceconnect.fr/france-connect/fc-docker.git $FC_ROOT/fc-docker
  script:
    - cd $FC_ROOT/fc-docker
    - ./build.sh $APP $RELEASE_VERSION
    - echo -e "\e[1;34m$MSG $RELEASE_VERSION\e[0m"

FC+/FCA/exploitation/build-image:
  extends: .base-build
  variables:
    APP: exploitation-v2
    MSG: "environments/pa4-integ/group_vars/all/versions.yml\nfc_exploitation_v2_version:$PROD_RELEASE_VERSION\n\nenvironments/nubo12-fca-integ/group_vars/all/versions.yml\nenvironments/nubo12-fca-integ/group_vars/all/versions.yml\nenvironments/nubo01-fca-integ/group_vars/all/versions.yml\nfca_exploitation_version:"
